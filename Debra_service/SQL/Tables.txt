

CREATE TABLE Users (
    UserID INT PRIMARY KEY,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,
    UserType VARCHAR(50) NOT NULL
);

CREATE TABLE Employee (
    EmployeeID INT PRIMARY KEY,
	UserID INT,
    FirstName VARCHAR(100),
    LastName VARCHAR(100),
	Role VARCHAR(100),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Customer (
    CustomerID INT PRIMARY KEY,
	UserID INT,
    FirstName VARCHAR(100),
    LastName VARCHAR(100),
	Phone VARCHAR(15),
	FOREIGN KEY (UserID) REFERENCES Users(UserID)
	);

CREATE TABLE Partner (
    PartnerID INT PRIMARY KEY,
	UserID INT,
    CompanyName VARCHAR(255),
    IsActive BOOLEAN,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);


events tables

CREATE TABLE Events (
    EventID INT PRIMARY KEY,
	PartnerID INT,
    EventName VARCHAR(100),
    Venue VARCHAR(100),
    Description VARCHAR(255),
    Status VARCHAR(50),
    EventImage bytea,
    FOREIGN KEY (PartnerID) REFERENCES Partner(PartnerID)
);


CREATE TABLE Commissions (
    CommissionID INT PRIMARY KEY,
    EventID INT,
    EmployeeID INT,
    Rate DECIMAL(5, 2),
    FOREIGN KEY (EventID) REFERENCES Events(EventID),
	FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
);



CREATE TABLE Ticket (
    TicketID INT PRIMARY KEY,
    EventID INT,
	Type VARCHAR(100),
	Price INT,
	Quantity INT,
	Status boolean,
    FOREIGN KEY (EventID) REFERENCES Events(EventID)
);


CREATE TABLE Sales (
    SalesID INT PRIMARY KEY,
    CustomerID INT,
    TicketID INT,
    Quantity INT,
    Total DECIMAL(10, 2),
    SaleDate DATE,
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
    FOREIGN KEY (TicketID) REFERENCES Ticket(TicketID)
);
